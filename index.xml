<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>辉辉的小窝</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on 辉辉的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 19 Dec 2019 15:23:26 +0800</lastBuildDate>
    
        <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      
        <description>&lt;p&gt;Hugo is a static site engine written in Go.&lt;/p&gt;
&lt;p&gt;It makes use of a variety of open source projects including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;Viper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/jWalterWeatherman&#34;&gt;J Walter Weatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cast&#34;&gt;Cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/gohugoio&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>CSS动画优化</title>
      <link>http://localhost:1313/post/css%E5%8A%A8%E7%94%BB%E4%BC%98%E5%8C%96/</link>
      <pubDate>Thu, 19 Dec 2019 15:23:26 +0800</pubDate>
      
      <guid>http://localhost:1313/post/css%E5%8A%A8%E7%94%BB%E4%BC%98%E5%8C%96/</guid>
      
        <description>&lt;h1 id=&#34;heading&#34;&gt;浏览器渲染原理&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/randertree.png&#34; alt=&#34;渲染树&#34;&gt;
浏览器渲染经过以下步骤:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据HTML构建HTML树。(DOM)&lt;/li&gt;
&lt;li&gt;根据CSS构建CSS树。(CSSOM)&lt;/li&gt;
&lt;li&gt;将两棵树合并成一颗渲染树。(rander tree)&lt;/li&gt;
&lt;li&gt;Layout布局(文档流、盒模型、计算大小和位置)。&lt;/li&gt;
&lt;li&gt;Paint绘制(把边框颜色、文字颜色、阴影等画出来)。&lt;/li&gt;
&lt;li&gt;Compose合成(根据层叠关系展示画面).&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;css&#34;&gt;如何优化CSS动画&lt;/h1&gt;
&lt;h3 id=&#34;heading1&#34;&gt;答案是:减少浏览器的渲染次数&lt;/h3&gt;
&lt;p&gt;三种的更新方式:
&lt;img src=&#34;http://localhost:1313/images/3ways.png&#34; alt=&#34;三种更新方式&#34;&gt;&lt;/p&gt;
&lt;p&gt;可见三种更新方式中,第一种更新方法需要重新渲染3次(包括layout,paint,compose),第二种需重新渲染2次,而第三种只需要重新渲染1次.&lt;/p&gt;
&lt;p&gt;不同的CSS属性有不同的更新方式,大家可以参考csstriggers.com(不需硬记),这个网站已经把所有属性都试过了.&lt;/p&gt;
&lt;p&gt;Tips: 参考网站中的Blink为谷歌浏览器内核,Gecko为火狐浏览器内核,WebKit为Safari浏览器内核,EdgeHTML为IE浏览器内核&lt;/p&gt;
&lt;p&gt;所以优化CSS动画性能的方法是尽量使用渲染次数少的CSS属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS优化:使用will-change或translate&lt;/li&gt;
&lt;li&gt;JS优化:使用requestAnimaitonFrame代替setTimeout或setlnterval&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>CSS动画制作的两种做法</title>
      <link>http://localhost:1313/post/css%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%81%9A%E6%B3%95/</link>
      <pubDate>Wed, 18 Dec 2019 15:23:26 +0800</pubDate>
      
      <guid>http://localhost:1313/post/css%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%81%9A%E6%B3%95/</guid>
      
        <description>&lt;h1 id=&#34;heading&#34;&gt;我们来做一颗跳动的心吧&lt;/h1&gt;
&lt;h2 id=&#34;heading1&#34;&gt;首先我们需要一颗心&lt;/h2&gt;
&lt;p&gt;百度搜索&amp;quot;心&amp;rdquo;&lt;img src=&#34;http://localhost:1313/images/heart.png&#34; alt=&#34;heart&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;hellip;&amp;hellip;这个也太可怕了吧,不适合儿童观众,我们还是自己用CSS画一个吧.&lt;/p&gt;
&lt;p&gt;心怎么画?我们学的块级元素都是方形的,算加上border-radius也顶多只能画个 球&lt;/p&gt;
&lt;p&gt;好吧!发挥我们的想象力,我们可以把它分解成两圆一方
&lt;img src=&#34;http://localhost:1313/images/ugly.png&#34; alt=&#34;丑&#34;&gt;&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/code.png&#34; alt=&#34;code&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;transform&#34;&gt;用transform方法制作动画&lt;/h2&gt;
&lt;p&gt;我们需要做的动画让心放大-缩小-放大-缩小,以达到跳动的效果&lt;/p&gt;
&lt;p&gt;在原有代码中增加tranform的transition(动画过渡)和scale(缩放),代码如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/code1.png&#34; alt=&#34;code&#34;&gt;&lt;/p&gt;
&lt;p&gt;transform属性中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;transition: all 1s;&lt;/code&gt;动画播放时间1s&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transform: scale(1.5);&lt;/code&gt;元素放大1.5倍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动画效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/demo.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;animation&#34;&gt;用animation方法制作动画&lt;/h2&gt;
&lt;p&gt;在原有代码中增加animation和@keyframes heart(窗口名称),代码如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/code2.png&#34; alt=&#34;code&#34;&gt;&lt;/p&gt;
&lt;p&gt;animation属性中:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;animation:.5s heart infinite alternate-reverse;&lt;/code&gt;动画播放时间0.5s,目标窗口名称heart,infinite为无限播放,alternate-reverse为反向开始循环播放&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;@keyframes heart {
  0%{transform: scale(1);}
  100%{transform: scale(1.5);}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在0%时刻缩放比为1,在100%时刻缩放比1.5&lt;/p&gt;
&lt;p&gt;动画效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/demo1.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;animation1&#34;&gt;用animation方法制作多个时间点动画&lt;/h2&gt;
&lt;p&gt;多个时间点动画表示,在多个时刻进行不同的变化;&lt;/p&gt;
&lt;p&gt;在上一步的代码中修改@keyframes heart,代码如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@keyframes heart {
  0%{
    transform: scale(1);
  }
  50%{
    transform: scale(.5);
  }
  100%{
    transform: scale(1.5);
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在0%时刻缩放比为1,在50%时刻缩放比0.5,在100%时刻缩放比1.5&lt;/p&gt;
&lt;p&gt;动画效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/demo2.gif&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;heading2&#34;&gt;总结:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;transform和animation都可以用于制作CSS动画,animation在制作多个时间点动画会更加方便.&lt;/li&gt;
&lt;li&gt;transform和animation还有很多用法,请在MDN中进行学习.&lt;/li&gt;
&lt;li&gt;虽CSS属性虽然简单,但是要用好靠的是想象力&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>http://localhost:1313/post/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Thu, 12 Dec 2019 16:23:26 +0800</pubDate>
      
      <guid>http://localhost:1313/post/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      
        <description>&lt;h2 id=&#34;a-&#34;&gt;a 标签的用法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;a-href&#34;&gt;a 的href取值&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4 id=&#34;heading&#34;&gt;网址&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;https  &lt;code&gt;&amp;lt;a href=&amp;quot;https//google.com&amp;quot;&amp;gt;谷歌&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;http  &lt;code&gt;&amp;lt;a href=&amp;quot;http//google.com&amp;quot;&amp;gt;谷歌&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;//  &lt;code&gt;&amp;lt;a href=&amp;quot;//google.com&amp;quot;&amp;gt;谷歌&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以上三种形式均可&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4 id=&#34;heading1&#34;&gt;路径&lt;/h4&gt;
&lt;p&gt;相对路径和绝对路径都可以.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;heading2&#34;&gt;伪协议&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;javascript,可以引入JS代码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;javascript:alert(1);&amp;quot;&amp;gt;javascript&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mailto,点击后跳转到发邮件页面&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;mailto:943514589@qq.com&amp;quot;&amp;gt;send mail to&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以下是mailto的详细用法&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/mailto.png&#34; alt=&#34;mailto&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;tel,手机点击后跳转到呼叫页面&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;tel:13311113322&amp;quot;&amp;gt;phone call&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;h4 id=&#34;id&#34;&gt;id&lt;/h4&gt;
&lt;p&gt;id,可以跳转到页面内id所标记的元素位置&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;#xxx&amp;quot;&amp;gt;查看ID为xxx的项目&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;target&#34;&gt;target的取值&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4 id=&#34;heading3&#34;&gt;内置命名&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;取值为_blank,a标签的链接在新窗口打开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;取值为_top,a标签的链接在最顶层的窗口打开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;取值为_parent,a标签的链接在其上一层的窗口打开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;取值为_self,a标签的链接在当前窗口打开&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;h4 id=&#34;heading4&#34;&gt;程序员命名&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;取值为window的name,a标签的链接会在对应名称的窗口打开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;取值为iframe的name,a标签的链接会在对应名称的内嵌窗口打开&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;h4 id=&#34;download&#34;&gt;download&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;下载a标签的目标链接&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;img-&#34;&gt;img 标签的用法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;heading5&#34;&gt;作用&lt;/h3&gt;
&lt;p&gt;img的作用是发出get请求,展示一张照片&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;heading6&#34;&gt;属性&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;alt 当图片请求失败是,显示alt内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;height 设定图片高度,单位默认px&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;width 设定图片宽度,单位默认px&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;src 填写资源地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;heading7&#34;&gt;事件&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;onload,图片加载成功时触发事件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;onerror,图片加载失败时触发事件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;heading8&#34;&gt;响应式&lt;/h3&gt;
&lt;p&gt;响应式页面,可以适合不同屏幕及手机端查看,需要加上max-width: 100%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;heading9&#34;&gt;可替换元素&lt;/h3&gt;
&lt;p&gt;可替换元素（replaced element）的展现效果不是由 CSS 来控制的。这些元素是一种外部对象，它们外观的渲染，是独立于 CSS 的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;table-&#34;&gt;table 标签的用法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;table&#34;&gt;table的基本结构&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;thead&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;th&amp;gt;英语&amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;翻译&amp;lt;/th&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/thead&amp;gt;
    &amp;lt;tbody&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;hyper&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;超级&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/tbody&amp;gt;
    &amp;lt;tfoot&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;nothing&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;nothing&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/tfoot&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;thead 表头 ；tbody 表身 ；tfoot 表尾；
包含在以上三个属性中的有tr 一行、th会加粗、td不会加粗。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;table1&#34;&gt;table的相关样式&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4 id=&#34;tablelayout&#34;&gt;table-layout&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;table-layout取值为fixed时,每列宽度等宽&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;table-layout取值为auto时,每列宽度根据其内容宽度设定&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;bordercollapse&#34;&gt;border-collapse,此属性可以消除表格边界之间的距离&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;borderspacing&#34;&gt;border-spacing,此属性可以修改表格边界之间的距离&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;heading10&#34;&gt;最后写一点想法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;html&#34;&gt;html标签十分之多,但并不是所用标签都能经常用到,所以不需要每个标签逐个学习,只需要先把常用的学习了,剩下的在工作中遇到再学习&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&#34;htmlhtml&#34;&gt;html标签的默认样式,大部分已经过时(不符合现在的审美),建议在编写网站时先把html标签的默认样式取消掉&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>http://localhost:1313/post/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Wed, 11 Dec 2019 16:23:26 +0800</pubDate>
      
      <guid>http://localhost:1313/post/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      
        <description>&lt;h1 id=&#34;html-&#34;&gt;Ⅰ.HTML 是谁发明的？&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/Sir_Tim_Berners-Lee.jpg&#34; alt=&#34;李爵士&#34;&gt;&lt;/p&gt;
&lt;p&gt;HTML 诞生于蒂姆·伯纳斯-李爵士的一篇文章&lt;a href=&#34;https://html.com/tags/&#34;&gt;HTML Tags&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;html&#34;&gt;Ⅱ.什么是HTML？&lt;/h1&gt;
&lt;p&gt;HTML 是网页使用的语言，定义了网页的结构和内容。浏览器访问网站，其实就是从服务器下载 HTML 代码，然后渲染出网页。HTML 的全名是“超文本标记语言”（HyperText Markup Language）&lt;/p&gt;
&lt;h1 id=&#34;html-1&#34;&gt;Ⅲ.HTML 起手应该写什么&lt;/h1&gt;
&lt;p&gt;HTML起手应该包含以下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;提示：html文件用VScode打开后，输入!之后按tab键，上述代码将会自动生成，方便快捷。&lt;/p&gt;
&lt;h1 id=&#34;heading&#34;&gt;Ⅳ.网页的基本标签有哪些&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;doctype&#34;&gt;&lt;code&gt;&amp;lt;!doctype&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网页的第一个标签通常是&lt;code&gt;&amp;lt;!doctype&amp;gt;&lt;/code&gt;，表示文档类型，告诉浏览器如何解析网页。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;html1&#34;&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;标签是网页的顶层容器，也称为根元素（root element），其他元素都是它的子元素。一个网页只能有一个&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;标签。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;head&#34;&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;标签是一个容器标签，用于放置网页的元信息。它的内容不会出现在网页上，而是为网页渲染做准备。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;meta&#34;&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;标签用于设置或说明网页的元数据，必须放在&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;里面。一个&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;标签就是一项元数据，网页可以有多个&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;标签用于指定网页的标题，会显示在浏览器窗口的标题栏。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;body&#34;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;标签是一个容器标签，用于放置网页的主体内容。浏览器显示的页面内容，都是放置在它的内部。它是&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;的第二个子元素，紧跟在&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;后面。&lt;/p&gt;
&lt;h1 id=&#34;heading1&#34;&gt;Ⅴ.常用的表章节的标签有哪些&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;h1h6&#34;&gt;&lt;code&gt;&amp;lt;h1&amp;gt;~&amp;lt;h6&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTML 提供了6个标签，用来表示文章的标题。按照标题的等级，一共分成六级。&lt;code&gt;h1`~&lt;/code&gt;h6`分别为一级标题、二级标题、三级标题、四级标题、五级标题、六级标题。默认情况下，浏览器会粗体显示标题。h1的字号比h2大，h2比h3大，以此类推。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/h1~h6.png&#34; alt=&#34;h1~h6&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;section&#34;&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;标签表示一个含有主题的独立部分，通常用在文档里面表示一个章节。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;article&#34;&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;标签表示页面里面一段完整的内容，即使页面的其他部分不存在，也具有独立使用的意义，通常用来表示一篇文章或者一个论坛帖子。它可以有自己的标题（&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;到&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;aside&#34;&gt;&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;标签用来放置与网页或文章主要内容间接相关的部分。网页级别的&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;，可以用来放置侧边栏，但不一定就在页面的侧边；文章级别的&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;，可以用来放置评论或注释。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;main&#34;&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;标签表示页面的主体内容，一个页面只能有一个&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;heading2&#34;&gt;Ⅵ.全局属性有哪些&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;class&#34;&gt;class&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;class属性用来对网页元素进行分类。如果不同元素的class属性值相同，就表示它们是一类的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;contenteditable&#34;&gt;contenteditable&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTML 网页的内容默认是用户不能编辑，contenteditable属性允许用户修改内容。它有两个可能的值。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;true或空字符串：内容可以编辑&lt;/li&gt;
&lt;li&gt;false：不可以编辑&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;hidden&#34;&gt;hidden&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hidden是一个布尔属性，表示当前的网页元素不再跟页面相关，因此浏览器不会渲染这个元素，所以就不会在网页中看到它。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;id&#34;&gt;id&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;id属性是元素在网页内的唯一标识符。比如，网页可能包含多个&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;标签，id属性可以指定每个&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;标签的唯一标识符。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;style&#34;&gt;style&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;style属性用来指定当前元素的 CSS 样式。具体的设置，请看 CSS 教程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;tabindex&#34;&gt;tabindex&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tabindex属性的值是一个整数，表示用户按下 Tab 键的时候，网页焦点转移的顺序。不同的属性值有不同的含义。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;负整数：该元素可以获得焦点（比如使用 JavaScript 的focus()方法），但不参与 Tab 键对网页元素的遍历。这个值通常是-1。&lt;/li&gt;
&lt;li&gt;0：该元素参与 Tab 键的遍历，顺序由浏览器指定，通常是按照其在网页里面出现的位置。&lt;/li&gt;
&lt;li&gt;正整数：网页元素按照从小到大的顺序（1、2、3、……），参与 Tab 键的遍历。如果多个元素的tabindex属性相同，则按照在网页源码里面出现的顺序遍历。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;title&#34;&gt;title&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;title属性用来为元素添加附加说明。大多数浏览器中，鼠标悬浮在元素上面时，会将title属性值作为浮动提示，显示出来。&lt;/p&gt;
&lt;h1 id=&#34;heading3&#34;&gt;Ⅶ.常用的内容标签有哪些&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;a&#34;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链接通过&lt;!-- raw HTML omitted --&gt;标签表示，用户点击后，浏览器会跳转到指定的网址。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;strong&#34;&gt;&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;style属性用来指定当前元素的 CSS 样式。具体的设置，请看 CSS 教程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;em&#34;&gt;em&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;是一个行内标签，表示强调（emphasize），浏览器会以斜体显示它包含的内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;code&#34;&gt;&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;可以用于包裹代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;pre&#34;&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;是一个块级元素，表示保留原来的格式（preformatted），即浏览器会保留该标签内部原始的换行和空格。浏览器默认以等宽字体显示标签内容。&lt;/p&gt;
&lt;h1 id=&#34;heading4&#34;&gt;Ⅷ.最后介绍两个在线编程网站&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://js.jirengu.com/?html,output&#34;&gt;饥人谷Jsbin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优点速度快，但是只能编写单个文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://codesandbox.io/&#34;&gt;codesanbox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;速度较慢，但是有在线文件夹，可上传图片等等&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>如何使用Hugo搭建个人博客</title>
      <link>http://localhost:1313/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Tue, 10 Dec 2019 15:24:33 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      
        <description>&lt;h1 id=&#34;hugo&#34;&gt;Hugo是什么？&lt;/h1&gt;
&lt;p&gt;Hugo是一个用Go语言编写的静态网站生成器，Hugo一般只需要几秒钟就能生成一个网站（每页少于1毫秒），被称为”世界上最快的网站构建框架“，是最热门的静态网站生成器之一，被广泛采用。&lt;/p&gt;
&lt;h1 id=&#34;hugo1&#34;&gt;如何使用Hugo搭建个人博客&lt;/h1&gt;
&lt;h2 id=&#34;step1hugo&#34;&gt;Step1：安装Hugo&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下载&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;Hugo安装包&lt;/a&gt;
&lt;img src=&#34;http://localhost:1313/images/hugo%E5%AE%89%E8%A3%85%E5%8C%85.png&#34; alt=&#34;下在windos版本的安装包&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载到安装包，解压后把hugo.exe.放到x:\xxx\hugo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加环境变量：点击计算机图标-右键-属性-高级系统设置-系统变量-path&lt;img src=&#34;http://localhost:1313/images/hugo-path.png&#34; alt=&#34;环境变量&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4.重启终端，运行hugo version。安装成功就能查看到版本号
&lt;img src=&#34;http://localhost:1313/images/hugo_version.png&#34; alt=&#34;hugo_version&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step2-hugo&#34;&gt;Step2: 创建一个新的Hugo网页&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;进入&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo官网&lt;/a&gt;，点击Quick Start。&lt;/li&gt;
&lt;li&gt;Step1操作前面已完成，直接操作Step2&lt;/li&gt;
&lt;li&gt;复制Step2的代码，在cmder上运行。注意这里要把”quickstart“改成“github用户名.github.io-creater!”(这样操作的好处是，上传到GitHub上后方便标识。)
&lt;img src=&#34;http://localhost:1313/images/hugo-step2.png&#34; alt=&#34;hugo-step2&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step3-&#34;&gt;Step3: 下载一个主题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;依次复制Step3的代码在cmder上运行
&lt;img src=&#34;http://localhost:1313/images/hugo-step3.png&#34; alt=&#34;hugo-step3&#34;&gt;&lt;/li&gt;
&lt;li&gt;由于主题是国外资源，国内下载很慢，建议挂VPN下载&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step4-&#34;&gt;Step4: 新建一篇文章&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;复制Step4的代码在cmder上运行
&lt;img src=&#34;http://localhost:1313/images/hugo-step4.png&#34; alt=&#34;hugo-step4&#34;&gt;&lt;/li&gt;
&lt;li&gt;打开新建的markdown文件&lt;/li&gt;
&lt;li&gt;将draft: true 改为false(draft为草稿意思，改为false后文章才会显示在blog上)
&lt;img src=&#34;http://localhost:1313/images/hugo-step4-2.png&#34; alt=&#34;hugo-step4-2&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step5-hugo&#34;&gt;Step5: 开启Hugo服务器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;复制Step5的代码在cmder上运行
&lt;img src=&#34;http://localhost:1313/images/hugo-step5.png&#34; alt=&#34;hugo-step5&#34;&gt;&lt;/li&gt;
&lt;li&gt;运行后不要关闭服务器(关闭后本地访问会失败)&lt;/li&gt;
&lt;li&gt;在浏览器中访问http://localhost:1313/或者127.0.0.1:1313&lt;/li&gt;
&lt;li&gt;此时将会看到你新建的blog&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step6-&#34;&gt;Step6 自定义主题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;打开hugo网站根目录的config.toml&lt;/li&gt;
&lt;li&gt;可自定义一下代码，包括：语言、博客名
&lt;img src=&#34;http://localhost:1313/images/hugo-step6.png&#34; alt=&#34;hugo-step6&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;step7-&#34;&gt;Step7 简历静态网站&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;复制Step7的代码在cmder上运行
&lt;img src=&#34;http://localhost:1313/images/hugo-step7.png&#34; alt=&#34;hugo-step7&#34;&gt;&lt;/li&gt;
&lt;li&gt;运行后将会得到一个public的目录&lt;/li&gt;
&lt;li&gt;在hugo的更目录中创建名为“.gitignore”的文件&lt;/li&gt;
&lt;li&gt;编辑“.gitignore”,写入/public/(由于hugo根目录和public需要分别上传到GitHub，此操作可以防止子仓库的问题出现)&lt;/li&gt;
&lt;li&gt;在GitHub上新建一个仓库，命名为github用户名.github.io&lt;/li&gt;
&lt;li&gt;把public目录上传到新建的仓库中&lt;/li&gt;
&lt;li&gt;在你的git仓库里面Settings的GitHub Pages下你可以看到http://你的用户名.http://github.io的链接。&lt;/li&gt;
&lt;li&gt;打开此链接，就能看到你的Hugo已经被挂到网上了&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;heading&#34;&gt;大功告成&lt;/h1&gt;
&lt;h2 id=&#34;heading1&#34;&gt;最后你还可这样做&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在你的GitHub上新建一个仓库，命名为github用户名.github.io-creator&lt;/li&gt;
&lt;li&gt;将Hugo根目录的文件上传到此仓库(注意：Hugo根目录上存储着原代码，Hugo根目录丢失，就无法写博客了)&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>开博大吉</title>
      <link>http://localhost:1313/post/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Mon, 09 Dec 2019 15:29:33 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      
        <description>&lt;h1 id=&#34;heading&#34;&gt;大家好&lt;/h1&gt;
&lt;p&gt;我的博客开通了，希望我能写出好文章给大家看&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
